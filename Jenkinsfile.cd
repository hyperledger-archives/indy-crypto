#!groovy

@Library('SovrinHelpers') _

try {
    publishing()
} catch (err) {
}

def publishing() {
    stage('Publishing') {
        echo "${env.BRANCH_NAME}: start publishing"

        publishedVersions = parallel([
                'ubuntu-files' : { ubuntuPublishing() },
        ])
    }
}

void getSrcVersion() {
    commit = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
    version = sh(returnStdout: true, script: "wget -q https://raw.githubusercontent.com/hyperledger/indy-crypto/$commit/libindy-crypto/Cargo.toml -O - | grep -E '^version =' | head -n1 | cut -f2 -d= | cut -f2 -d '\"'").trim()
    return version
}

def ubuntuPublishing() {
    node('ubuntu') {
        stage('Publish Ubuntu Files') {
            try {
                echo 'Publish Ubuntu files: Checkout csm'
                checkout scm

                version = getSrcVersion()

                echo 'Publish Ubuntu files: Build docker image'
                testEnv = dockerHelpers.build('indy-crypto', 'libindy-crypto/ci/ubuntu.dockerfile libindy-crypto/ci')

                libindyCryptoCargoPublishing(testEnv, false)
            }
            finally {
                echo 'Publish Ubuntu files: Cleanup'
                step([$class: 'WsCleanup'])
            }
        }
    }

    return version
}

def getSuffix(isRelease, target) {
    def suffix = "-dev.22"
    return suffix
}