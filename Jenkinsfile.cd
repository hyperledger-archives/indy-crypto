#!groovy

@Library('SovrinHelpers') _

try {
    publishing()
} catch (err) {
    throw err
}

def publishing() {
    stage('Publishing') {
        echo "${env.BRANCH_NAME}: start publishing"

        publishedVersions = parallel([
                'windows-files': { windowsPublishing() },
        ])
    }
}

void getSrcVersion() {
    commit = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
    version = sh(returnStdout: true, script: "wget -q https://raw.githubusercontent.com/hyperledger/indy-crypto/$commit/libindy-crypto/Cargo.toml -O - | grep -E '^version =' | head -n1 | cut -f2 -d= | cut -f2 -d '\"'").trim()
    return version
}

def windowsPublishing() {
    node('win2016') {
        stage('Publish Libindy Crypto Windows Files') {
            try {
                echo 'Publish Windows files: Checkout csm'
                checkout scm

                version = getSrcVersion()

                dir('libindy-crypto') {
                    echo "Publish Windows files: Download prebuilt dependencies"
                    bat 'wget -O prebuilt.zip "https://repo.sovrin.org/windows/libindy_crypto/deps/indy-crypto-deps.zip"'
                    bat 'unzip prebuilt.zip -d prebuilt'

                    echo "Publish Windows files: Build"
                    withEnv([
                            "OPENSSL_DIR=$WORKSPACE\\libindy-crypto\\prebuilt",
                            "INDY_CRYPTO_PREBUILT_DEPS_DIR=$WORKSPACE\\libindy-crypto\\prebuilt",
                            "RUST_BACKTRACE=1"
                    ]) {
                        bat "cargo build"
                    }

                    sh "mkdir libindy_crypto-zip"
//                    sh "mkdir libindy_crypto-zip/lib"
//                    sh "cp -r ./include ./libindy_crypto-zip"
//                    sh "cp ./target/debug/*.dll ./libindy_crypto-zip/lib/"
//                    sh "powershell.exe -nologo -noprofile -command \"& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::CreateFromDirectory('libindy_crypto-zip', 'libindy_crypto_$version.zip'); }\""
//                    sh "rm -rf ./libindy-zip"

/*                    withCredentials([file(credentialsId: 'SovrinRepoSSHKey', variable: 'sovrin_repo_key')]) {
                        sh "./ci/libindy_crypto-win-zip-and-upload.sh $version '${sovrin_repo_key}' test $env.BUILD_NUMBER"
                    }*/
                }
            }
            finally {
                echo 'Publish Windows files: Cleanup'
                step([$class: 'WsCleanup'])
            }
        }
    }
    return version
}